---
import Logo from "./SVG/Logo.astro";
import Hamburger from "./SVG/Hamburger.astro";
import Cross from "./SVG/Cross.astro";
---

<header>
  <div class="nav-wrapper">
    <div class="logo-wrapper">
      <a href="./">
        <Logo />
      </a>
    </div>

    <input type="checkbox" id="nav-toggle" />
    <label for="nav-toggle" class="nav-toggle-button menu">
      <Hamburger />
    </label>
    <label for="nav-toggle" class="nav-toggle-button cross">
      <Cross />
    </label>
    <nav>
      <div class="nav-title">Page Navigation</div>
      <ul class="primary-nav">
        <li class="nav-item" id="nav-home">
          <a href="#"><span aria-hidden="true">00</span>Home</a>
        </li>
        <li class="nav-item" id="nav-about">
          <a href="#about"><span aria-hidden="true">01</span>About</a>
        </li>
        <li class="nav-item" id="nav-skills">
          <a href="#skills"><span aria-hidden="true">02</span>Skills</a>
        </li>
        <li class="nav-item" id="nav-timeline">
          <a href="#timeline"><span aria-hidden="true">03</span>Timeline</a>
        </li>
        <li class="nav-item" id="nav-projects">
          <a href="#projects"><span aria-hidden="true">04</span>Projects</a>
        </li>
        <li class="nav-item" id="nav-links">
          <a href="#links"><span aria-hidden="true">05</span>Links </a>
        </li>
      </ul>
    </nav>
  </div>
</header>

<style>
  header {
    position: fixed;
    padding: 0.5rem var(--header-padding-inline);
    top: 0;
    left: 0;
    width: 100%;
    z-index: 1000;
    user-select: none;
    transition:
      transform 0.5s ease-in-out 0.1s,
      box-shadow 0.5s ease-in-out 0.1s;
  }

  .nav-wrapper {
    display: flex;
    justify-content: space-between;
  }
  .nav-wrapper > * {
    flex-shrink: 0;
  }

  a {
    text-decoration: unset;
    color: unset;
    padding: 0.75rem 0.5rem;
    display: block;
  }
  a:hover {
    filter: unset;
  }

  .primary-nav {
    height: 100%;
    display: flex;
    gap: 1rem;
    align-items: center;
  }

  .nav-item {
    cursor: pointer;
    border-radius: 0.375rem;
    font-size: var(--fs-400);
    transition:
      transform 0.3s ease-in-out,
      background-color 0.2s linear;
  }
  .nav-item:hover {
    background-color: var(--clr-primary);
    transform: translate(2px, -5px);
  }
  .nav-item span {
    font-weight: 900;
    font-size: 0.85em;
    color: var(--clr-text--muted);
    margin-right: 0.25ch;
  }
  .nav-item:hover {
    transform: translate(1px, -2px);
  }

  .logo-wrapper,
  .nav-toggle-button {
    height: 64px;
    width: 64px;
  }

  #nav-toggle {
    display: none;
  }
  .scrolling-down {
    transform: translate3d(0, -100%, 0);
    transition:
      transform 0.5s ease-in-out 0.1s,
      box-shadow 0.5s ease-in-out 0.1s;
  }
  .scrolling-up {
    background-color: var(--clr-background);
    box-shadow: 0 -2px 5px black;
    transition:
      transform 0.2s ease-in-out 0.1s,
      box-shadow 0.2s ease-in-out 0.1s;
  }

  @media screen and (min-width: 801px) {
    .nav-title,
    .nav-toggle,
    .nav-toggle-button {
      display: none;
    }
  }
  @media screen and (max-width: 800px) {
    .nav-toggle-button {
      position: absolute;
      right: var(--header-padding-inline);
    }
    #nav-toggle:checked ~ nav {
      transform: translate3d(0, 0, 0);
      opacity: 100%;
      transition: opacity 0.2s ease-in-out;
    }
    #nav-toggle:not(:checked) ~ nav {
      transform: translate3d(100%, 0, 0);
      opacity: 0%;
      transition: all 0.3s ease-in-out;
    }
    #nav-toggle:not(:checked) ~ .menu {
      opacity: 100%;
      transition: opacity 0.3s ease-in-out 0.15s;
    }
    #nav-toggle:checked ~ .menu {
      opacity: 0%;
      transition: opacity 0.3s ease-in-out;
    }
    #nav-toggle:not(:checked) ~ .cross {
      opacity: 0%;
      transition: opacity 0.3s ease-in-out;
    }
    #nav-toggle:checked ~ .cross {
      opacity: 100%;
      transition: opacity 0.3s ease-in-out 0.15s;
    }

    body:has(#nav-toggle:checked) {
      overflow: hidden;
    }
    nav {
      position: fixed;
      inset: 0 0 0 33%;
      background-color: var(--nav-background);
      -webkit-backdrop-filter: blur(6px);
      backdrop-filter: blur(6px);
    }
    .nav-toggle-button {
      z-index: 1;
    }

    .nav-title {
      padding: 0.5rem 1rem;
      font-size: var(--fs-600);
      line-height: 64px;
    }

    .primary-nav {
      flex-direction: column;
      padding: 1rem 2rem;
      gap: 0.5rem;
      align-items: flex-start;
    }
    .nav-item {
      width: 100%;
      font-size: var(--fs-500);
    }
    .nav-item span {
      display: block;
      margin-bottom: 0.25ch;
    }
  }
</style>

<script>
  import { fade } from "astro:transitions";

  let lastScroll = 0;
  const MARGIN = 5;
  const nav = document.querySelector("header");
  const navToggle = document.querySelector("#nav-toggle") as HTMLInputElement;

  const navItems = document.querySelectorAll(".nav-item");
  let canHide = true;
  let timeout = -1;
  navItems.forEach((item) => {
    item.addEventListener("click", () => {
      canHide = false;
      clearTimeout(timeout);
      timeout = setTimeout(() => {
        canHide = true;
      }, 500);
    });
  });

  if (!nav || !navToggle) {
    throw new Error("nav element not found");
  }

  window.addEventListener("scroll", () => {
    const currentScroll = window.scrollY;
    if (currentScroll <= 10) {
      nav.classList.remove("scrolling-down");
      nav.classList.remove("scrolling-up");
    } else if (currentScroll > lastScroll + MARGIN && canHide) {
      nav.classList.remove("scrolling-up");
      nav.classList.add("scrolling-down");
    } else if (currentScroll < lastScroll - MARGIN && canHide) {
      nav.classList.remove("scrolling-down");
      nav.classList.add("scrolling-up");
    }
    lastScroll = currentScroll;
  });
</script>
